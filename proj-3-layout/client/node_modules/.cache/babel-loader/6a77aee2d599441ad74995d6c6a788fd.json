{"ast":null,"code":"import _objectSpread from \"/Users/thomasnelson/Desktop/proj-testing/proj-3-testing/proj-3-layout/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// Function to decide what happens to state based on an action.\nimport { REGISTER_SUCCESS, REGISTER_FAIL, GET_USER, SET_LOADING } from '../types'; // GithubState dispaches actions here, ad depending on the TYPE it does something, maybe with a payload...\n\nexport default ((state, action) => {\n  switch (action.type) {\n    case USER_LOADED:\n      return _objectSpread({}, state, {\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload\n      });\n\n    case REGISTER_SUCCESS:\n      localStorage.setItem('token', action.payload.token); // saving the token to headings\n\n      return _objectSpread({}, state, {}, action.payload, {\n        isAuthenticated: true,\n        loading: false\n      });\n\n    case REGISTER_FAIL:\n      localStorage.removeItem('token'); // removing any tokens from storage\n\n      return _objectSpread({}, state, {\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        error: action.payload // setting error in the payload to the one in msg in users.js\n\n      });\n\n    case GET_USER:\n      return _objectSpread({}, state, {\n        user: action.payload,\n        loading: false\n      });\n\n    case SET_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/thomasnelson/Desktop/proj-testing/proj-3-testing/proj-3-layout/client/src/context/user/userReducer.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","GET_USER","SET_LOADING","state","action","type","USER_LOADED","isAuthenticated","loading","user","payload","localStorage","setItem","token","removeItem","error"],"mappings":";AAAA;AAEA,SACIA,gBADJ,EAEIC,aAFJ,EAGIC,QAHJ,EAIIC,WAJJ,QAKO,UALP,C,CAOA;;AACA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKC,WAAL;AACI,+BACOH,KADP;AAEII,QAAAA,eAAe,EAAE,IAFrB;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,IAAI,EAAEL,MAAM,CAACM;AAJjB;;AAMJ,SAAKX,gBAAL;AACIY,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BR,MAAM,CAACM,OAAP,CAAeG,KAA7C,EADJ,CACyD;;AACrD,+BACOV,KADP,MAEOC,MAAM,CAACM,OAFd;AAGIH,QAAAA,eAAe,EAAE,IAHrB;AAIIC,QAAAA,OAAO,EAAE;AAJb;;AAMJ,SAAKR,aAAL;AACIW,MAAAA,YAAY,CAACG,UAAb,CAAwB,OAAxB,EADJ,CACsC;;AAClC,+BACOX,KADP;AAEIU,QAAAA,KAAK,EAAE,IAFX;AAGIN,QAAAA,eAAe,EAAE,KAHrB;AAIIC,QAAAA,OAAO,EAAE,KAJb;AAKIC,QAAAA,IAAI,EAAE,IALV;AAMIM,QAAAA,KAAK,EAAEX,MAAM,CAACM,OANlB,CAM0B;;AAN1B;;AAQJ,SAAKT,QAAL;AACI,+BACOE,KADP;AAEIM,QAAAA,IAAI,EAAEL,MAAM,CAACM,OAFjB;AAGIF,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKN,WAAL;AACI,+BACOC,KADP;AAEIK,QAAAA,OAAO,EAAE;AAFb;;AAKJ;AACI,aAAOL,KAAP;AAvCR;AAyCH,CA1CD","sourcesContent":["// Function to decide what happens to state based on an action.\n\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    GET_USER,\n    SET_LOADING\n} from '../types';\n\n// GithubState dispaches actions here, ad depending on the TYPE it does something, maybe with a payload...\nexport default (state, action) => {\n    switch (action.type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: action.payload\n            };\n        case REGISTER_SUCCESS:\n            localStorage.setItem('token', action.payload.token); // saving the token to headings\n            return {\n                ...state,\n                ...action.payload,\n                isAuthenticated: true,\n                loading: false\n            };\n        case REGISTER_FAIL:\n            localStorage.removeItem('token'); // removing any tokens from storage\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n                user: null,\n                error: action.payload // setting error in the payload to the one in msg in users.js\n            };\n        case GET_USER:\n            return {\n                ...state,\n                user: action.payload,\n                loading: false\n            };\n        case SET_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}