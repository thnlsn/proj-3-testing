{"ast":null,"code":"import _slicedToArray from \"/Users/thomasnelson/Desktop/Assignments/Homework Assignments/github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/thomasnelson/Desktop/Assignments/Homework Assignments/github-finder/src/components/users/User.js\";\nimport React, { Fragment, useState, useEffect, useContext } from 'react';\nimport Spinner from '../layout/Spinner';\nimport Repos from '../repos/Repos';\nimport { Link } from 'react-router-dom'; // for the back button to go back to searches and not empty\n\nimport GithubContext from '../../context/github/githubContext'; // No state here, just a lifecycle method\n\nconst User = ({\n  match\n}) => {\n  const githubContext = useContext(GithubContext);\n  const getUser = githubContext.getUser,\n        loading = githubContext.loading,\n        user = githubContext.user,\n        repos = githubContext.repos,\n        getUserRepos = githubContext.getUserRepos;\n\n  const _useState = useState('5'),\n        _useState2 = _slicedToArray(_useState, 2),\n        repoNum = _useState2[0],\n        setRepoNum = _useState2[1]; // HOW DID match BECOME A PROP ???????????????????????????\n\n\n  useEffect(() => {\n    getUser(match.params.login);\n    getUserRepos(match.params.login, repoNum); // eslint-disable-next-line\n  }, []); // COME BACK TO THIS... IT IS WIERD.\n  // useEffect() runs on ANY update, so it runs on a loop. The [] mimics componentDidMount() because that is where you would but cases for useEffect() to run, but empty [] means just once when it mounts.\n\n  useEffect(() => {\n    getUser(match.params.login);\n    getUserRepos(match.params.login, repoNum); // eslint-disable-next-line\n  });\n  /*     const onChange = event => {\n      console.log(setRepoNum(event.target.value));\n      setRepoNum(event.target.value);\n  }; */\n\n  const name = user.name,\n        company = user.company,\n        avatar_url = user.avatar_url,\n        location = user.location,\n        bio = user.bio,\n        blog = user.blog,\n        login = user.login,\n        html_url = user.html_url,\n        followers = user.followers,\n        following = user.following,\n        public_repos = user.public_repos,\n        public_gists = user.public_gists,\n        hireable = user.hireable;\n  if (loading) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Back to Search\"), \"Hireable:\", ' ', hireable ? React.createElement(\"i\", {\n    className: \"fas fa-check text-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }) : React.createElement(\"i\", {\n    className: \"fas fa-times-circle text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"card grid-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"all-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: avatar_url,\n    className: \"round-img\",\n    alt: \"\",\n    style: {\n      width: '150px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Location: \", location)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, bio && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Bio\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, bio)), React.createElement(\"a\", {\n    href: html_url,\n    className: \"btn btn-dark my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Visit GitHub Profile\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, login && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Username: \"), \" \", login)), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, company && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Company: \"), \" \", company)), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, blog && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Website: \"), \" \", blog)))), React.createElement(\"div\", {\n    className: \"card text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"badge badge-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Followers: \", followers), React.createElement(\"div\", {\n    className: \"badge badge-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Following: \", following), React.createElement(\"div\", {\n    className: \"badge badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Public Repos: \", public_repos), React.createElement(\"div\", {\n    className: \"badge badge-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Public Gists: \", public_gists))), React.createElement(\"select\", {\n    value: repoNum,\n    onChange: event => setRepoNum(event.target.value, console.log(event.target.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"5\"), React.createElement(\"option\", {\n    value: \"10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"10\"), React.createElement(\"option\", {\n    value: \"25\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"25\"), React.createElement(\"option\", {\n    value: \"50\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"50\"), React.createElement(\"option\", {\n    value: \"100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"100\")), React.createElement(Repos, {\n    repos: repos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }));\n};\n/* const Dropdown = ({ options }) => {\n    const [selectedOption, setSelectedOption] = useState(options[0].value);\n    return (\n        <select\n            value={selectedOption}\n            onChange={e => setSelectedOption(e.target.value)}\n        >\n            {options.map(o => (\n                <option value={o.value}>{o.label}</option>\n            ))}\n        </select>\n    );\n}; */\n\n\nexport default User;","map":{"version":3,"sources":["/Users/thomasnelson/Desktop/Assignments/Homework Assignments/github-finder/src/components/users/User.js"],"names":["React","Fragment","useState","useEffect","useContext","Spinner","Repos","Link","GithubContext","User","match","githubContext","getUser","loading","user","repos","getUserRepos","repoNum","setRepoNum","params","login","name","company","avatar_url","location","bio","blog","html_url","followers","following","public_repos","public_gists","hireable","width","event","target","value","console","log"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport Spinner from '../layout/Spinner';\nimport Repos from '../repos/Repos';\nimport { Link } from 'react-router-dom'; // for the back button to go back to searches and not empty\nimport GithubContext from '../../context/github/githubContext';\n\n// No state here, just a lifecycle method\nconst User = ({ match }) => {\n    const githubContext = useContext(GithubContext);\n\n    const { getUser, loading, user, repos, getUserRepos } = githubContext;\n\n    const [repoNum, setRepoNum] = useState('5');\n\n    // HOW DID match BECOME A PROP ???????????????????????????\n    useEffect(() => {\n        getUser(match.params.login);\n        getUserRepos(match.params.login, repoNum);\n        // eslint-disable-next-line\n    }, []); // COME BACK TO THIS... IT IS WIERD.\n    // useEffect() runs on ANY update, so it runs on a loop. The [] mimics componentDidMount() because that is where you would but cases for useEffect() to run, but empty [] means just once when it mounts.\n\n    useEffect(() => {\n        getUser(match.params.login);\n        getUserRepos(match.params.login, repoNum);\n        // eslint-disable-next-line\n    });\n\n    /*     const onChange = event => {\n        console.log(setRepoNum(event.target.value));\n        setRepoNum(event.target.value);\n    }; */\n\n    const {\n        name,\n        company,\n        avatar_url,\n        location,\n        bio,\n        blog,\n        login,\n        html_url,\n        followers,\n        following,\n        public_repos,\n        public_gists,\n        hireable\n    } = user;\n\n    if (loading) return <Spinner />;\n\n    return (\n        <Fragment>\n            <Link to='/' className='btn btn-light'>\n                Back to Search\n            </Link>\n            Hireable:{' '}\n            {hireable ? (\n                <i className='fas fa-check text-success' />\n            ) : (\n                <i className='fas fa-times-circle text-danger' />\n            )}\n            <div className='card grid-2'>\n                <div className='all-center'>\n                    <img\n                        src={avatar_url}\n                        className='round-img'\n                        alt=''\n                        style={{ width: '150px' }}\n                    />\n                    <h1>{name}</h1>\n                    <p>Location: {location}</p>\n                </div>\n                <div>\n                    {bio && (\n                        <Fragment>\n                            <h3>Bio</h3>\n                            <p>{bio}</p>\n                        </Fragment>\n                    )}\n                    <a href={html_url} className='btn btn-dark my-1'>\n                        Visit GitHub Profile\n                    </a>\n                    <ul>\n                        <li>\n                            {login && (\n                                <Fragment>\n                                    <strong>Username: </strong> {login}\n                                </Fragment>\n                            )}\n                        </li>\n\n                        <li>\n                            {company && (\n                                <Fragment>\n                                    <strong>Company: </strong> {company}\n                                </Fragment>\n                            )}\n                        </li>\n\n                        <li>\n                            {blog && (\n                                <Fragment>\n                                    <strong>Website: </strong> {blog}\n                                </Fragment>\n                            )}\n                        </li>\n                    </ul>\n                </div>\n                <div className='card text-center'>\n                    <div className='badge badge-primary'>\n                        Followers: {followers}\n                    </div>\n                    <div className='badge badge-success'>\n                        Following: {following}\n                    </div>\n                    <div className='badge badge-light'>\n                        Public Repos: {public_repos}\n                    </div>\n                    <div className='badge badge-dark'>\n                        Public Gists: {public_gists}\n                    </div>\n                </div>\n            </div>\n            <select\n                value={repoNum}\n                onChange={event =>\n                    setRepoNum(\n                        event.target.value,\n                        console.log(event.target.value)\n                    )\n                }\n            >\n                <option value='5'>5</option>\n                <option value='10'>10</option>\n                <option value='25'>25</option>\n                <option value='50'>50</option>\n                <option value='100'>100</option>\n            </select>\n            <Repos repos={repos} />\n        </Fragment>\n    );\n};\n\n/* const Dropdown = ({ options }) => {\n    const [selectedOption, setSelectedOption] = useState(options[0].value);\n    return (\n        <select\n            value={selectedOption}\n            onChange={e => setSelectedOption(e.target.value)}\n        >\n            {options.map(o => (\n                <option value={o.value}>{o.label}</option>\n            ))}\n        </select>\n    );\n}; */\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}