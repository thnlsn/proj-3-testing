{"ast":null,"code":"import _slicedToArray from \"/Users/thomasnelson/Desktop/Assignments/Homework Assignments/github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/thomasnelson/Desktop/Assignments/Homework Assignments/github-finder/src/App.js\";\nimport React, { Fragment, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport axios from 'axios';\nimport GithubState from './context/github/GithubState';\nimport './App.css';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        repos = _useState2[0],\n        setRepos = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        alert = _useState6[0],\n        setAlert = _useState6[1]; //▓▓ Set Alert\n\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg,\n      type\n    }); // Normally would have (key: value) (msg: msg, type: type), but because it is same, just (msg, type)\n\n    setTimeout(() => setAlert(null), 5000);\n  }; //▓▓ Remove Alert\n\n\n  const removeAlert = () => setAlert(null);\n\n  return React.createElement(GithubState, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    alert: alert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\" // This exact path will render the search component\n    ,\n    render: props => React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Search, {\n      showAlert: showAlert,\n      removeAlert: removeAlert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Users, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/about\"\n    /* No render function because no props needed */\n    ,\n    component: About,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/user/:login\",\n    render: props => // user will be filled with the response from getUser(), which will be found in state once called\n    React.createElement(User, Object.assign({}, props, {\n      getUserRepos: getUserRepos,\n      repos: repos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/thomasnelson/Desktop/Assignments/Homework Assignments/github-finder/src/App.js"],"names":["React","Fragment","useState","BrowserRouter","Router","Switch","Route","Navbar","Users","User","Search","Alert","About","axios","GithubState","App","repos","setRepos","loading","setLoading","alert","setAlert","showAlert","msg","type","setTimeout","removeAlert","props","getUserRepos"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport axios from 'axios';\n\nimport GithubState from './context/github/GithubState';\n\nimport './App.css';\n\nconst App = () => {\n    const [repos, setRepos] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [alert, setAlert] = useState(null);\n\n    //▓▓ Set Alert\n    const showAlert = (msg, type) => {\n        setAlert({ msg, type }); // Normally would have (key: value) (msg: msg, type: type), but because it is same, just (msg, type)\n        setTimeout(() => setAlert(null), 5000);\n    };\n\n    //▓▓ Remove Alert\n    const removeAlert = () => setAlert(null);\n\n    return (\n        <GithubState>\n            <Router>\n                <div className='App'>\n                    <Navbar />\n                    <div className='container'>\n                        <Alert alert={alert} />\n                        <Switch>\n                            <Route\n                                exact\n                                path='/' // This exact path will render the search component\n                                render={props => (\n                                    <Fragment>\n                                        <Search\n                                            showAlert={showAlert}\n                                            removeAlert={removeAlert}\n                                        />\n                                        <Users />\n                                    </Fragment>\n                                )}\n                            />\n                            <Route\n                                exact\n                                path='/about' /* No render function because no props needed */\n                                component={About}\n                            />\n                            <Route\n                                exact\n                                path='/user/:login'\n                                render={props => (\n                                    // user will be filled with the response from getUser(), which will be found in state once called\n                                    <User\n                                        {...props}\n                                        getUserRepos={getUserRepos}\n                                        repos={repos}\n                                    />\n                                )}\n                            />\n                        </Switch>\n                    </div>\n                </div>\n            </Router>\n        </GithubState>\n    );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}