{"ast":null,"code":"var _jsxFileName = \"/Users/thomasnelson/Desktop/Assignments/Homework Assignments/github-finder/src/components/users/Users.js\";\nimport React, { useContext } from 'react';\nimport UserItem from './UserItem';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport GithubContext from '../../context/github/githubContext';\n\nconst Users = ({\n  users,\n  loading\n}) => {\n  if (loading) {\n    return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"div\", {\n      style: userStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, users.map(user => React.createElement(UserItem, {\n      key: user.id,\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    })));\n  }\n};\n\nUsers.propTypes = {\n  users: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired\n};\nconst userStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(3, 1fr',\n  gridGap: '1rem'\n};\nexport default Users;","map":{"version":3,"sources":["/Users/thomasnelson/Desktop/Assignments/Homework Assignments/github-finder/src/components/users/Users.js"],"names":["React","useContext","UserItem","Spinner","PropTypes","GithubContext","Users","users","loading","userStyle","map","user","id","propTypes","array","isRequired","bool","display","gridTemplateColumns","gridGap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAClC,MAAIA,OAAJ,EAAa;AACT,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAEO;AACH,WACI;AAAK,MAAA,KAAK,EAAEC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,KAAK,CAACG,GAAN,CAAUC,IAAI,IACX,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,MAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CADJ;AAOH;AACJ,CAZD;;AAcAL,KAAK,CAACO,SAAN,GAAkB;AACdN,EAAAA,KAAK,EAAEH,SAAS,CAACU,KAAV,CAAgBC,UADT;AAEdP,EAAAA,OAAO,EAAEJ,SAAS,CAACY,IAAV,CAAeD;AAFV,CAAlB;AAKA,MAAMN,SAAS,GAAG;AACdQ,EAAAA,OAAO,EAAE,MADK;AAEdC,EAAAA,mBAAmB,EAAE,eAFP;AAGdC,EAAAA,OAAO,EAAE;AAHK,CAAlB;AAMA,eAAeb,KAAf","sourcesContent":["import React, { useContext } from 'react';\nimport UserItem from './UserItem';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport GithubContext from '../../context/github/githubContext';\n\nconst Users = ({ users, loading }) => {\n    if (loading) {\n        return <Spinner />;\n    } else {\n        return (\n            <div style={userStyle}>\n                {users.map(user => (\n                    <UserItem key={user.id} user={user} />\n                ))}\n            </div>\n        );\n    }\n};\n\nUsers.propTypes = {\n    users: PropTypes.array.isRequired,\n    loading: PropTypes.bool.isRequired\n};\n\nconst userStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr',\n    gridGap: '1rem'\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}