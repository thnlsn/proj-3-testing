{"ast":null,"code":"import _slicedToArray from \"/Users/thomasnelson/Desktop/Assignments/Homework Assignments/github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/thomasnelson/Desktop/Assignments/Homework Assignments/github-finder/src/context/github/GithubState.js\";\n// Initial state and all of our actions will go here, such as fetching data etc.\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USER, GET_REPOS } from '../types';\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n\n  const _useReducer = useReducer(GithubReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Search User\n  //▓▓ Search GitHub users (passed into the Search component as a prop)\n\n\n  const searchUsers = async search => {\n    setLoading();\n    const res = await axios.get(\"https://api.github.com/search/users?q=\".concat(search, \"&client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n    console.log(res.data.items);\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  }; // Get User\n  // Get Repos\n  // Clear Users\n  //▓▓ Clear users from state (passed into search component as a prop)\n\n\n  const clearUsers = () => dispatch({\n    type: CLEAR_USERS\n  }); // Set Loading\n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers,\n      clearUsers\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["/Users/thomasnelson/Desktop/Assignments/Homework Assignments/github-finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","search","setLoading","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","console","log","data","items","type","payload","clearUsers","children"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SACIC,YADJ,EAEIC,WAFJ,EAGIC,WAHJ,EAIIC,QAJJ,EAKIC,SALJ,QAMO,UANP;;AAQA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AACzB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,EADU;AAEjBC,IAAAA,IAAI,EAAE,EAFW;AAGjBC,IAAAA,KAAK,EAAE,EAHU;AAIjBC,IAAAA,OAAO,EAAE;AAJQ,GAArB;;AADyB,sBAQCf,UAAU,CAACG,aAAD,EAAgBQ,YAAhB,CARX;AAAA;AAAA,QAQlBK,KARkB;AAAA,QAQXC,QARW,oBAUzB;AACA;;;AACA,QAAMC,WAAW,GAAG,MAAMC,MAAN,IAAgB;AAChCC,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,iDAC2BH,MAD3B,wBAC+CI,OAAO,CAACC,GAAR,CAAYC,0BAD3D,4BACuGF,OAAO,CAACC,GAAR,CAAYE,8BADnH,EAAlB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACQ,IAAJ,CAASC,KAArB;AAEAb,IAAAA,QAAQ,CAAC;AACLc,MAAAA,IAAI,EAAE3B,YADD;AAEL4B,MAAAA,OAAO,EAAEX,GAAG,CAACQ,IAAJ,CAASC;AAFb,KAAD,CAAR;AAIH,GAZD,CAZyB,CA0BzB;AAEA;AAEA;AACA;;;AACA,QAAMG,UAAU,GAAG,MAAMhB,QAAQ,CAAC;AAAEc,IAAAA,IAAI,EAAEzB;AAAR,GAAD,CAAjC,CAhCyB,CAkCzB;;;AACA,QAAMc,UAAU,GAAG,MAAMH,QAAQ,CAAC;AAAEc,IAAAA,IAAI,EAAE1B;AAAR,GAAD,CAAjC;;AAEA,SACI,oBAAC,aAAD,CAAe,QAAf;AACI,IAAA,KAAK,EAAE;AACHO,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADV;AAEHC,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAFT;AAGHC,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAHV;AAIHC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAJZ;AAKHG,MAAAA,WALG;AAMHe,MAAAA;AANG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUKvB,KAAK,CAACwB,QAVX,CADJ;AAcH,CAnDD;;AAqDA,eAAezB,WAAf","sourcesContent":["// Initial state and all of our actions will go here, such as fetching data etc.\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n    SEARCH_USERS,\n    SET_LOADING,\n    CLEAR_USERS,\n    GET_USER,\n    GET_REPOS\n} from '../types';\n\nconst GithubState = props => {\n    const initialState = {\n        users: [],\n        user: {},\n        repos: [],\n        loading: false\n    };\n\n    const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n    // Search User\n    //▓▓ Search GitHub users (passed into the Search component as a prop)\n    const searchUsers = async search => {\n        setLoading();\n\n        const res = await axios.get(\n            `https://api.github.com/search/users?q=${search}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n        );\n        console.log(res.data.items);\n\n        dispatch({\n            type: SEARCH_USERS,\n            payload: res.data.items\n        });\n    };\n\n    // Get User\n\n    // Get Repos\n\n    // Clear Users\n    //▓▓ Clear users from state (passed into search component as a prop)\n    const clearUsers = () => dispatch({ type: CLEAR_USERS });\n\n    // Set Loading\n    const setLoading = () => dispatch({ type: SET_LOADING });\n\n    return (\n        <GithubContext.Provider\n            value={{\n                users: state.users,\n                user: state.user,\n                repos: state.repos,\n                loading: state.loading,\n                searchUsers,\n                clearUsers\n            }}\n        >\n            {props.children}\n        </GithubContext.Provider>\n    );\n};\n\nexport default GithubState;\n"]},"metadata":{},"sourceType":"module"}