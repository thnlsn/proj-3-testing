{"ast":null,"code":"import _slicedToArray from \"/Users/thomasnelson/Desktop/Assignments/Homework Assignments/github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/thomasnelson/Desktop/Assignments/Homework Assignments/github-finder/src/components/users/Search.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport GithubContext from '../../context/github/githubContext';\n\nconst Search = ({\n  showClear,\n  clearUsers,\n  showAlert,\n  removeAlert\n}) => {\n  const githubContext = useContext(GithubContext);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (text === '') {\n      showAlert('Please enter something', 'light');\n    } else {\n      searchUsers(text); // Passing in a prop from app\n\n      setText('');\n      removeAlert();\n    }\n  };\n\n  const onChange = event => setText(event.target.value);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"search\",\n    placeholder: \"Search Users...\",\n    value: text,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-dark btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), showClear && React.createElement(\"button\", {\n    className: \"btn btn-lite btn-block\",\n    onClick: clearUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Clear\"));\n};\n\nSearch.propTypes = {\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired,\n  removeAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/thomasnelson/Desktop/Assignments/Homework Assignments/github-finder/src/components/users/Search.js"],"names":["React","useState","PropTypes","GithubContext","Search","showClear","clearUsers","showAlert","removeAlert","githubContext","useContext","text","setText","onSubmit","event","preventDefault","searchUsers","onChange","target","value","propTypes","func","isRequired","bool","setAlert"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,UAAb;AAAyBC,EAAAA,SAAzB;AAAoCC,EAAAA;AAApC,CAAD,KAAuD;AAClE,QAAMC,aAAa,GAAGC,UAAU,CAACP,aAAD,CAAhC;;AADkE,oBAE1CF,QAAQ,CAAC,EAAD,CAFkC;AAAA;AAAA,QAE3DU,IAF2D;AAAA,QAErDC,OAFqD;;AAIlE,QAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtBA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIJ,IAAI,KAAK,EAAb,EAAiB;AACbJ,MAAAA,SAAS,CAAC,wBAAD,EAA2B,OAA3B,CAAT;AACH,KAFD,MAEO;AACHS,MAAAA,WAAW,CAACL,IAAD,CAAX,CADG,CACgB;;AACnBC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAJ,MAAAA,WAAW;AACd;AACJ,GATD;;AAWA,QAAMS,QAAQ,GAAGH,KAAK,IAAIF,OAAO,CAACE,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAjC;;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEN,QAAhB;AAA0B,IAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,WAAW,EAAC,iBAHhB;AAII,IAAA,KAAK,EAAEF,IAJX;AAKI,IAAA,QAAQ,EAAEM,QALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,KAAK,EAAC,QAFV;AAGI,IAAA,SAAS,EAAC,wBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ,EAeKZ,SAAS,IACN;AAAQ,IAAA,SAAS,EAAC,wBAAlB;AAA2C,IAAA,OAAO,EAAEC,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBR,CADJ;AAuBH,CAxCD;;AA0CAF,MAAM,CAACgB,SAAP,GAAmB;AACfd,EAAAA,UAAU,EAAEJ,SAAS,CAACmB,IAAV,CAAeC,UADZ;AAEfjB,EAAAA,SAAS,EAAEH,SAAS,CAACqB,IAAV,CAAeD,UAFX;AAGfE,EAAAA,QAAQ,EAAEtB,SAAS,CAACmB,IAAV,CAAeC,UAHV;AAIfd,EAAAA,WAAW,EAAEN,SAAS,CAACmB,IAAV,CAAeC;AAJb,CAAnB;AAOA,eAAelB,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport GithubContext from '../../context/github/githubContext';\n\nconst Search = ({ showClear, clearUsers, showAlert, removeAlert }) => {\n    const githubContext = useContext(GithubContext);\n    const [text, setText] = useState('');\n\n    const onSubmit = event => {\n        event.preventDefault();\n        if (text === '') {\n            showAlert('Please enter something', 'light');\n        } else {\n            searchUsers(text); // Passing in a prop from app\n            setText('');\n            removeAlert();\n        }\n    };\n\n    const onChange = event => setText(event.target.value);\n\n    return (\n        <div>\n            <form onSubmit={onSubmit} className='form'>\n                <input\n                    type='text'\n                    name='search'\n                    placeholder='Search Users...'\n                    value={text}\n                    onChange={onChange}\n                />\n                <input\n                    type='submit'\n                    value='Search'\n                    className='btn btn-dark btn-block'\n                />\n            </form>\n            {showClear && (\n                <button className='btn btn-lite btn-block' onClick={clearUsers}>\n                    Clear\n                </button>\n            )}\n        </div>\n    );\n};\n\nSearch.propTypes = {\n    clearUsers: PropTypes.func.isRequired,\n    showClear: PropTypes.bool.isRequired,\n    setAlert: PropTypes.func.isRequired,\n    removeAlert: PropTypes.func.isRequired\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}