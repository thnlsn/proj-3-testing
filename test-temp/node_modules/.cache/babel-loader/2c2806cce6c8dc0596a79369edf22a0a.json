{"ast":null,"code":"var _jsxFileName = \"/Users/thomasnelson/Desktop/Assignments/Homework Assignments/github-finder/src/components/users/User.js\";\nimport React, { Component, Fragment } from 'react';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'; // for the back button to go back to searches and not empty\n// No state here, just a lifecycle method\n\nexport class User extends Component {\n  // HOW DID match BECOME A PROP ???????????????????????????\n  componentDidMount() {\n    this.props.getUser(this.props.match.params.login); // This is found in\n  }\n\n  render() {\n    const _this$props$user = this.props.user,\n          name = _this$props$user.name,\n          company = _this$props$user.company,\n          avatar_url = _this$props$user.avatar_url,\n          location = _this$props$user.location,\n          bio = _this$props$user.bio,\n          blog = _this$props$user.blog,\n          login = _this$props$user.login,\n          html_url = _this$props$user.html_url,\n          followers = _this$props$user.followers,\n          following = _this$props$user.following,\n          public_repos = _this$props$user.public_repos,\n          public_gists = _this$props$user.public_gists,\n          hireable = _this$props$user.hireable;\n    const loading = this.props.loading;\n    if (loading) return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Back to Search\"), \"Hireable:\", ' ', hireable ? React.createElement(\"i\", {\n      className: \"fas fa-check text-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      className: \"fas fa-times-circle text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card grid-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"all-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: avatar_url,\n      className: \"round-img\",\n      alt: \"\",\n      style: {\n        width: '150px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Location: \", location)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, bio && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Bio\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, bio)), React.createElement(\"a\", {\n      href: html_url,\n      className: \"btn btn-dark my-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Visit GitHub Profile\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, login && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Username: \"), \" \", login)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, company && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Company: \"), \" \", company)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, blog && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Website: \"), \" \", blog)))), React.createElement(\"div\", {\n      className: \"card text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })));\n  }\n\n}\nUser.propTypes = {\n  loading: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  getUser: PropTypes.func.isRequired\n};\nexport default User;","map":{"version":3,"sources":["/Users/thomasnelson/Desktop/Assignments/Homework Assignments/github-finder/src/components/users/User.js"],"names":["React","Component","Fragment","Spinner","PropTypes","Link","User","componentDidMount","props","getUser","match","params","login","render","user","name","company","avatar_url","location","bio","blog","html_url","followers","following","public_repos","public_gists","hireable","loading","width","propTypes","bool","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'; // for the back button to go back to searches and not empty\n\n// No state here, just a lifecycle method\n\nexport class User extends Component {\n   // HOW DID match BECOME A PROP ???????????????????????????\n   componentDidMount() {\n      this.props.getUser(this.props.match.params.login); // This is found in\n   }\n\n   static propTypes = {\n      loading: PropTypes.bool,\n      user: PropTypes.object.isRequired,\n      getUser: PropTypes.func.isRequired\n   };\n\n   render() {\n      const {\n         name,\n         company,\n         avatar_url,\n         location,\n         bio,\n         blog,\n         login,\n         html_url,\n         followers,\n         following,\n         public_repos,\n         public_gists,\n         hireable\n      } = this.props.user;\n\n      const { loading } = this.props;\n\n      if (loading) return <Spinner />;\n\n      return (\n         <Fragment>\n            <Link to='/' className='btn btn-light'>\n               Back to Search\n            </Link>\n            Hireable:{' '}\n            {hireable ? (\n               <i className='fas fa-check text-success' />\n            ) : (\n               <i className='fas fa-times-circle text-danger' />\n            )}\n            <div className='card grid-2'>\n               <div className='all-center'>\n                  <img\n                     src={avatar_url}\n                     className='round-img'\n                     alt=''\n                     style={{ width: '150px' }}\n                  />\n                  <h1>{name}</h1>\n                  <p>Location: {location}</p>\n               </div>\n               <div>\n                  {bio && (\n                     <Fragment>\n                        <h3>Bio</h3>\n                        <p>{bio}</p>\n                     </Fragment>\n                  )}\n                  <a href={html_url} className='btn btn-dark my-1'>\n                     Visit GitHub Profile\n                  </a>\n                  <ul>\n                     <li>\n                        {login && (\n                           <Fragment>\n                              <strong>Username: </strong> {login}\n                           </Fragment>\n                        )}\n                     </li>\n\n                     <li>\n                        {company && (\n                           <Fragment>\n                              <strong>Company: </strong> {company}\n                           </Fragment>\n                        )}\n                     </li>\n\n                     <li>\n                        {blog && (\n                           <Fragment>\n                              <strong>Website: </strong> {blog}\n                           </Fragment>\n                        )}\n                     </li>\n                  </ul>\n               </div>\n               <div className='card text-center'></div>\n            </div>\n         </Fragment>\n      );\n   }\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}