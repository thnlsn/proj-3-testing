{"ast":null,"code":"import _slicedToArray from \"/Users/thomasnelson/Desktop/Assignments/Homework Assignments/github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/thomasnelson/Desktop/Assignments/Homework Assignments/github-finder/src/components/users/Search.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({\n  searchUsers,\n  showClear,\n  clearUsers,\n  setAlert\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (text === '') {\n      this.props.setAlert('Please enter something', 'light');\n    } else {\n      this.props.searchUsers(text); // Passing in a prop from app\n\n      this.setText({\n        text: ''\n      });\n      this.props.removeAlert();\n    }\n  };\n\n  const onChange = event => setText(event.target.value);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"search\",\n    placeholder: \"Search Users...\",\n    value: text,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-dark btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), showClear && React.createElement(\"button\", {\n    className: \"btn btn-lite btn-block\",\n    onClick: clearUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Clear\"));\n};\n\nSearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired,\n  removeAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/thomasnelson/Desktop/Assignments/Homework Assignments/github-finder/src/components/users/Search.js"],"names":["React","useState","PropTypes","Search","searchUsers","showClear","clearUsers","setAlert","text","setText","onSubmit","event","preventDefault","props","removeAlert","onChange","target","value","propTypes","func","isRequired","bool"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA,UAA1B;AAAsCC,EAAAA;AAAtC,CAAD,KAAsD;AAAA,oBACzCN,QAAQ,CAAC,EAAD,CADiC;AAAA;AAAA,QAC1DO,IAD0D;AAAA,QACpDC,OADoD;;AAGjE,QAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtBA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIJ,IAAI,KAAK,EAAb,EAAiB;AACb,WAAKK,KAAL,CAAWN,QAAX,CAAoB,wBAApB,EAA8C,OAA9C;AACH,KAFD,MAEO;AACH,WAAKM,KAAL,CAAWT,WAAX,CAAuBI,IAAvB,EADG,CAC2B;;AAC9B,WAAKC,OAAL,CAAa;AAAED,QAAAA,IAAI,EAAE;AAAR,OAAb;AACA,WAAKK,KAAL,CAAWC,WAAX;AACH;AACJ,GATD;;AAWA,QAAMC,QAAQ,GAAGJ,KAAK,IAAIF,OAAO,CAACE,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAjC;;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEP,QAAhB;AAA0B,IAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,WAAW,EAAC,iBAHhB;AAII,IAAA,KAAK,EAAEF,IAJX;AAKI,IAAA,QAAQ,EAAEO,QALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,KAAK,EAAC,QAFV;AAGI,IAAA,SAAS,EAAC,wBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ,EAeKV,SAAS,IACN;AAAQ,IAAA,SAAS,EAAC,wBAAlB;AAA2C,IAAA,OAAO,EAAEC,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBR,CADJ;AAuBH,CAvCD;;AAyCAH,MAAM,CAACe,SAAP,GAAmB;AACfd,EAAAA,WAAW,EAAEF,SAAS,CAACiB,IAAV,CAAeC,UADb;AAEfd,EAAAA,UAAU,EAAEJ,SAAS,CAACiB,IAAV,CAAeC,UAFZ;AAGff,EAAAA,SAAS,EAAEH,SAAS,CAACmB,IAAV,CAAeD,UAHX;AAIfb,EAAAA,QAAQ,EAAEL,SAAS,CAACiB,IAAV,CAAeC,UAJV;AAKfN,EAAAA,WAAW,EAAEZ,SAAS,CAACiB,IAAV,CAAeC;AALb,CAAnB;AAQA,eAAejB,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({ searchUsers, showClear, clearUsers, setAlert }) => {\n    const [text, setText] = useState('');\n\n    const onSubmit = event => {\n        event.preventDefault();\n        if (text === '') {\n            this.props.setAlert('Please enter something', 'light');\n        } else {\n            this.props.searchUsers(text); // Passing in a prop from app\n            this.setText({ text: '' });\n            this.props.removeAlert();\n        }\n    };\n\n    const onChange = event => setText(event.target.value);\n\n    return (\n        <div>\n            <form onSubmit={onSubmit} className='form'>\n                <input\n                    type='text'\n                    name='search'\n                    placeholder='Search Users...'\n                    value={text}\n                    onChange={onChange}\n                />\n                <input\n                    type='submit'\n                    value='Search'\n                    className='btn btn-dark btn-block'\n                />\n            </form>\n            {showClear && (\n                <button className='btn btn-lite btn-block' onClick={clearUsers}>\n                    Clear\n                </button>\n            )}\n        </div>\n    );\n};\n\nSearch.propTypes = {\n    searchUsers: PropTypes.func.isRequired,\n    clearUsers: PropTypes.func.isRequired,\n    showClear: PropTypes.bool.isRequired,\n    setAlert: PropTypes.func.isRequired,\n    removeAlert: PropTypes.func.isRequired\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}