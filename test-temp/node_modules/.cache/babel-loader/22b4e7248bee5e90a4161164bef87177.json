{"ast":null,"code":"var _jsxFileName = \"/Users/thomasnelson/Desktop/Assignments/Homework Assignments/github-finder/src/components/users/User.js\";\nimport React, { Fragment, useEffect, useContext } from 'react';\nimport Spinner from '../layout/Spinner';\nimport Repos from '../repos/Repos';\nimport { Link } from 'react-router-dom'; // for the back button to go back to searches and not empty\n\nimport GithubContext from '../../context/github/githubContext'; // No state here, just a lifecycle method\n\nconst User = ({\n  match\n}) => {\n  const githubContext = useContext(GithubContext);\n  const getUser = githubContext.getUser,\n        loading = githubContext.loading,\n        user = githubContext.user,\n        repos = githubContext.repos,\n        getUserRepos = githubContext.getUserRepos; // HOW DID match BECOME A PROP ???????????????????????????\n\n  useEffect(() => {\n    getUser(match.params.login);\n    getUserRepos(match.params.login); // eslint-disable-next-line\n  }, []); // COME BACK TO THIS... IT IS WIERD.\n  // useEffect() runs on ANY update, so it runs on a loop. The [] mimics componentDidMount() because that is where you would but cases for useEffect() to run, but empty [] means just once when it mounts.\n\n  const name = user.name,\n        company = user.company,\n        avatar_url = user.avatar_url,\n        location = user.location,\n        bio = user.bio,\n        blog = user.blog,\n        login = user.login,\n        html_url = user.html_url,\n        followers = user.followers,\n        following = user.following,\n        public_repos = user.public_repos,\n        public_gists = user.public_gists,\n        hireable = user.hireable;\n  if (loading) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Back to Search\"), \"Hireable:\", ' ', hireable ? React.createElement(\"i\", {\n    className: \"fas fa-check text-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }) : React.createElement(\"i\", {\n    className: \"fas fa-times-circle text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"card grid-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"all-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: avatar_url,\n    className: \"round-img\",\n    alt: \"\",\n    style: {\n      width: '150px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Location: \", location)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, bio && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Bio\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, bio)), React.createElement(\"a\", {\n    href: html_url,\n    className: \"btn btn-dark my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Visit GitHub Profile\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, login && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Username: \"), \" \", login)), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, company && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Company: \"), \" \", company)), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, blog && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Website: \"), \" \", blog)))), React.createElement(\"div\", {\n    className: \"card text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"badge badge-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Followers: \", followers), React.createElement(\"div\", {\n    className: \"badge badge-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Following: \", following), React.createElement(\"div\", {\n    className: \"badge badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Public Repos: \", public_repos), React.createElement(\"div\", {\n    className: \"badge badge-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Public Gists: \", public_gists))), React.createElement(\"select\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"five\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"5\"), React.createElement(\"option\", {\n    value: \"ten\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"10\"), React.createElement(\"option\", {\n    value: \"twenty-five\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"25\"), React.createElement(\"option\", {\n    value: \"fifty\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"50\"), React.createElement(\"option\", {\n    value: \"one-hundred\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"100\")), React.createElement(Repos, {\n    repos: repos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }));\n};\n\nexport default User;","map":{"version":3,"sources":["/Users/thomasnelson/Desktop/Assignments/Homework Assignments/github-finder/src/components/users/User.js"],"names":["React","Fragment","useEffect","useContext","Spinner","Repos","Link","GithubContext","User","match","githubContext","getUser","loading","user","repos","getUserRepos","params","login","name","company","avatar_url","location","bio","blog","html_url","followers","following","public_repos","public_gists","hireable","width"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useContext } from 'react';\nimport Spinner from '../layout/Spinner';\nimport Repos from '../repos/Repos';\nimport { Link } from 'react-router-dom'; // for the back button to go back to searches and not empty\nimport GithubContext from '../../context/github/githubContext';\n\n// No state here, just a lifecycle method\nconst User = ({ match }) => {\n    const githubContext = useContext(GithubContext);\n\n    const { getUser, loading, user, repos, getUserRepos } = githubContext;\n\n    // HOW DID match BECOME A PROP ???????????????????????????\n    useEffect(() => {\n        getUser(match.params.login);\n        getUserRepos(match.params.login);\n        // eslint-disable-next-line\n    }, []); // COME BACK TO THIS... IT IS WIERD.\n    // useEffect() runs on ANY update, so it runs on a loop. The [] mimics componentDidMount() because that is where you would but cases for useEffect() to run, but empty [] means just once when it mounts.\n\n    const {\n        name,\n        company,\n        avatar_url,\n        location,\n        bio,\n        blog,\n        login,\n        html_url,\n        followers,\n        following,\n        public_repos,\n        public_gists,\n        hireable\n    } = user;\n\n    if (loading) return <Spinner />;\n\n    return (\n        <Fragment>\n            <Link to='/' className='btn btn-light'>\n                Back to Search\n            </Link>\n            Hireable:{' '}\n            {hireable ? (\n                <i className='fas fa-check text-success' />\n            ) : (\n                <i className='fas fa-times-circle text-danger' />\n            )}\n            <div className='card grid-2'>\n                <div className='all-center'>\n                    <img\n                        src={avatar_url}\n                        className='round-img'\n                        alt=''\n                        style={{ width: '150px' }}\n                    />\n                    <h1>{name}</h1>\n                    <p>Location: {location}</p>\n                </div>\n                <div>\n                    {bio && (\n                        <Fragment>\n                            <h3>Bio</h3>\n                            <p>{bio}</p>\n                        </Fragment>\n                    )}\n                    <a href={html_url} className='btn btn-dark my-1'>\n                        Visit GitHub Profile\n                    </a>\n                    <ul>\n                        <li>\n                            {login && (\n                                <Fragment>\n                                    <strong>Username: </strong> {login}\n                                </Fragment>\n                            )}\n                        </li>\n\n                        <li>\n                            {company && (\n                                <Fragment>\n                                    <strong>Company: </strong> {company}\n                                </Fragment>\n                            )}\n                        </li>\n\n                        <li>\n                            {blog && (\n                                <Fragment>\n                                    <strong>Website: </strong> {blog}\n                                </Fragment>\n                            )}\n                        </li>\n                    </ul>\n                </div>\n                <div className='card text-center'>\n                    <div className='badge badge-primary'>\n                        Followers: {followers}\n                    </div>\n                    <div className='badge badge-success'>\n                        Following: {following}\n                    </div>\n                    <div className='badge badge-light'>\n                        Public Repos: {public_repos}\n                    </div>\n                    <div className='badge badge-dark'>\n                        Public Gists: {public_gists}\n                    </div>\n                </div>\n            </div>\n            <select>\n                <option value='five'>5</option>\n                <option value='ten'>10</option>\n                <option value='twenty-five'>25</option>\n                <option value='fifty'>50</option>\n                <option value='one-hundred'>100</option>\n            </select>\n            <Repos repos={repos} />\n        </Fragment>\n    );\n};\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}